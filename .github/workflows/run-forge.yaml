name: Run Forge

on:
  # this is called from within the build-images.yaml workflow since we depend on the images having been built before
  workflow_call:
    inputs:
      GIT_SHA:
        required: true
        type: string
        description:
  # pull_request:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-west-2
  IMAGE_TAG: ${{ inputs.GIT_SHA }}

jobs:
  forge:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.GIT_SHA }}
      # since we're running with `--build-all`, assume that if it passes, we have all images required for Forge
      - name: Ensure image exists
        run: aws ecr describe-images --repository-name="aptos/validator" --image-ids=imageTag=$IMAGE_TAG
      # XXX: make forge non-blocking for now
      - name: Run Forge
        shell: bash
        run: |
          FGI_REPRO_CMD="./scripts/fgi/run --tag $IMAGE_TAG --suite land_blocking --report forge_report.json"
          eval $FGI_REPRO_CMD
          FGI_EXIT_CODE=$?
          echo "FORGE EXIT CODE: $FGI_EXIT_CODE"
          echo "FGI_REPRO_CMD='$FGI_REPRO_CMD'" >> $_ENV
          echo "FGI_EXIT_CODE=$FGI_EXIT_CODE" >> $_ENV
      - name: Post Forge test results
        shell: bash
        env:
          PUSH_GATEWAY: ${{ secrets.PUSH_GATEWAY }}
          PUSH_GATEWAY_USER: ${{ secrets.PUSH_GATEWAY_USER }}
          PUSH_GATEWAY_PASSWORD: ${{ secrets.PUSH_GATEWAY_PASSWORD }}
          PR_NUMBER: ${{ github.event.number }}
          FORGE_GH_TOKEN: ${{ secrets._TOKEN }}
        run: |
          commit_message=$(git log -1 --pretty=%B)
          PR_NUMBER="${PR_NUMBER:-$(echo "${commit_message}" | grep 'Closes: #' | tail -1 | sed 's/Closes: #//')}" 

          echo "Repro: $FGI_REPRO_CMD"
          FORGE_REPORT_TXT=$(cat forge_report.json | jq -r .text)
          echo "FORGE_REPORT_TXT='$FORGE_REPORT_TXT'" >> $_ENV

          cat \<<EOF > forge_comment.txt
          Forge run: $_SERVER_URL/$_REPOSITORY/actions/runs/$_RUN_ID
          Forge test result: \`${FORGE_REPORT_TXT}\`
          EOF

          # replace all newlines
          FORGE_COMMENT=$(awk '{printf "%s\\n", $0}' forge_comment.txt)

          # TODO(rustielin): report cluster name
          # TODO(christian): reactivate metrics pushing once we have the PUSH_GATEWAY DNS name
          # echo "forge_job_status {FGI_EXIT_CODE=\"$FGI_EXIT_CODE\"} $_RUN_ID" | curl -u "$PUSH_GATEWAY_USER:$PUSH_GATEWAY_PASSWORD" --data-binary @- ${PUSH_GATEWAY}/metrics/job/forge

          # post  comment on the PR
          curl -s -H "Authorization: token ${FORGE_GH_TOKEN}" \
          -X POST -d "{\"body\": \"${FORGE_COMMENT}\"}" \
          "https://api..com/repos/aptos-labs/aptos-core/issues/${PR_NUMBER}/comments"
          exit 0
      - name: Check Forge status
        shell: bash
        run: |
          if [ -n "$FORGE_BLOCKING" ]; then
            exit $FGI_EXIT_CODE
          fi
          exit 0
